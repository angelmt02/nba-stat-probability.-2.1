cd /path/to/your/nba-stat-probability
git init
git remote add origin https://github.com/angelmt02/nba-stat-probability.-2.1/new/main.git
git add .
git commit -m "Initial commit"
git branch -M main
git push -u origin main
from flask import Flask, request, render_template
from nba_api.stats.endpoints import playergamelog
from nba_api.stats.static import players
import numpy as np
import logging
from functools import lru_cache

app = Flask(__name__)

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

@lru_cache(maxsize=128)
def fetch_player_stats(player_name, season, playoffs=False):
    try:
        player = players.find_players_by_full_name(player_name)
        if not player:
            raise ValueError(f"Player '{player_name}' not found.")
        
        player_id = player[0]['id']
        season_type = "Playoffs" if playoffs else "Regular Season"
        gamelog = playergamelog.PlayerGameLog(player_id=player_id, season=season, season_type_all_star=season_type)
        games = gamelog.get_normalized_dict()['PlayerGameLog']
        
        stats = [
            {
                "points": game['PTS'],
                "rebounds": game['REB'],
                "assists": game['AST'],
                "steals": game['STL'],
                "blocks": game['BLK']
            }
            for game in games
        ]
        logging.info(f"Fetched {len(stats)} games for {player_name} ({season}, {season_type}).")
        return stats
    
    except Exception as e:
        logging.error(f"Error fetching stats for {player_name}: {e}")
        return []

def calculate_probability(stats, category, target_value):
    data = [game[category] for game in stats if category in game]
    if not data:
        return 0
    unique, counts = np.unique(data, return_counts=True)
    probabilities = counts / len(data)
    prob_dist = dict(zip(unique, probabilities))
    return prob_dist.get(target_value, 0)

def calculate_stat_line_probability(stats, target_stat_line):
    joint_probability = 1.0
    for category, target_value in target_stat_line.items():
        prob = calculate_probability(stats, category, target_value)
        joint_probability *= prob
    return joint_probability

@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        try:
            player_name = request.form.get("player_name")
            season = request.form.get("season")
            playoffs = request.form.get("playoffs") == "on"
            target_stat_line = {
                "points": int(request.form.get("points")),
                "rebounds": int(request.form.get("rebounds")),
                "assists": int(request.form.get("assists")),
                "steals": int(request.form.get("steals")),
                "blocks": int(request.form.get("blocks")),
            }
            stats = fetch_player_stats(player_name, season, playoffs)
            if not stats:
                return render_template("index.html", error=f"No stats found for {player_name} in {season}.")
            
            probability = calculate_stat_line_probability(stats, target_stat_line)
            return render_template(
                "index.html",
                player_name=player_name,
                season=season,
                playoffs=playoffs,
                target_stat_line=target_stat_line,
                probability=f"{probability:.2%}"
            )
        
        except Exception as e:
            logging.error(f"Unexpected Error: {e}")
            return render_template("index.html", error="An unexpected error occurred. Please try again.")
    
    return render_template("index.html")

if __name__ == "__main__":
    app.run(debug=True)
Flask
nba-api
numpy
web: python app.py
FROM python:3.9-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
EXPOSE 5000
CMD ["python", "app.py"]
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NBA Player Stat Probability</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">NBA Player Stat Probability Calculator</h1>
        {% if error %}
            <div class="alert alert-danger">{{ error }}</div>
        {% endif %}
        <form method="post" class="p-4 border rounded bg-light">
            <div class="mb-3">
                <label for="player_name" class="form-label">Player Name:</label>
                <input type="text" id="player_name" name="player_name" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="season" class="form-label">Season:</label>
                <input type="text" id="season" name="season" class="form-control" placeholder="e.g., 2022-23" required>
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="playoffs" name="playoffs">
                <label class="form-check-label" for="playoffs">Include Playoffs</label>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label for="points" class="form-label">Points:</label>
                    <input type="number" id="points" name="points" class="form-control" required>
                </div>
                <div class="col-md-4">
                    <label for="rebounds" class="form-label">Rebounds:</label>
                    <input type="number" id="rebounds" name="rebounds" class="form-control" required>
                </div>
                <div class="col-md-4">
                    <label for="assists" class="form-label">Assists:</label>
                    <input type="number" id="assists" name="assists" class="form-control" required>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-6">
                    <label for="steals" class="form-label">Steals:</label>
                    <input type="number" id="steals" name="steals" class="form-control" required>
                </div>
                <div class="col-md-6">
                    <label for="blocks" class="form-label">Blocks:</label>
                    <input type="number" id="blocks" name="blocks" class="form-control" required>
                </div>
            </div>
            <button type="submit" class="btn btn-primary mt-4">Calculate Probability</button>
        </form>
        {% if player_name %}
            <div class="mt-5">
                <h3>Results for {{ player_name }} ({{ season }}{{ " Playoffs" if playoffs else "" }})</h3>
                <p>Target Stat Line: {{ target_stat_line }}</p>
                <p><strong>Probability: {{ probability }}</strong></p>
            </div>
        {% endif %}
    </div>
</body>
</html>
